openapi: 3.0.0
paths:
  /helloworld:
    post:
      summary: Returns "hello world" message
      description: This endpoint is needed to check routers
      response:
        '200'

  /login:
    post:
      tags:
        - user
      summary: User can sign in. Returns a bearer token.
      parameters:
        - name: login
          required: true
          description: User login (2 < login.length < 14)
          in: body
          example: justGyga
          schema:
            type: string
        - name: password
          required: true
          in: body
          description: User password (8 < password.length)
          example: 12344321
          schema:
            type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Response success message
                  token:
                    type: string
                    description: User token
        '404':    
          description: Conflict
          content:
            text/plain:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
  /registration:
    post:
      tags:
        - user
      summary: User can sign in. Returns a bearer token.
      parameters:
        - name: login
          required: true
          description: User login (2 < login.length < 14)
          in: body
          example: justGyga
          schema:
            type: string
        - name: password
          required: true
          in: body
          description: User password (8 < password.length)
          example: 12344321
          schema:
            type: string
        - name: name
          required: true
          in: body
          description: User name
          example: John
          schema:
            type: string
        - name: secondName
          required: true
          in: body
          description: User second name
          example: Mask
          schema:
            type: string
      responses:
        '201':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: User name
                  secondName:
                    type: string
                    description: User second name
        '409':    
          description: Conflict
          content:
            text/plain:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: error message

  /comments:
    post:
      tags:
      - comment
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /comments/:id:
    get:
      tags:
      - comment
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
    delete:
      tags:
      - comment
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string

  /marks/:id:            
    put:
      tags:
      - mark
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
    get:
      tags:
      - mark
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
